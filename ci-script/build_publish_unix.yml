jobs:
- job: ${{ parameters.name }}
  pool:
    vmImage: ${{ parameters.vmImage }}
  variables:
    rustup_toolchain: ${{ parameters.rustupToolchain }}
  steps:
  - script: |
      curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain $RUSTUP_TOOLCHAIN
      echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
    displayName: Install rust
  - script: cargo build --release
    displayName: Build the project
  - ${{ if eq(parameters.name, 'osx') }}:
      - script: |
          cp -R mac_os_app_template "Eight Puzzle.app"
          cp Resources/* "Eight Puzzle.app/Contents/Resources"
          mkdir "Eight Puzzle.app/Contents/MacOS"
          cp target/release/eight-puzzle "Eight Puzzle.app/Contents/MacOS"
        displayName: Generate MacOS App
      - task: ArchiveFiles@2
        input:
          rootFolderOrFile: 'Eight Puzzle.app'
          includeRootFolder: true
          archiveType: 'zip'
          archiveFile: "$(Build.ArtifactStagingDirectory)/${{ parameters.archiveName }}"
        displayName: Archive App
  - ${{ if eq(parameters.name, 'linux') }}:
      - task: CopyFiles@2
        inputs:
          sourceFolder: 'target/release'
          contents: 'eight-puzzle'
          targetFolder: 'app'
        displayName: Copy Executable File
      - task: CopyFiles@2
        inputs:
          contents: 'Resources/*'
          targetFolder: 'app'
        displayName: Copy Resources
      - task: ArchiveFiles@2
        inputs:
          rootFolderOrFile: 'app'
          includeRootFolder: false
          archiveType: 'zip'
          archiveFile: "$(Build.ArtifactStagingDirectory)/${{ parameters.archiveName }}"
        displayName: Archive App
      - task: PublishBuildArtifacts@1
        inputs:
          artifactName: app
        displayName: Publish
  - task: PublishBuildArtifacts@1
    inputs:
      artifactName: app
    displayName: Publish